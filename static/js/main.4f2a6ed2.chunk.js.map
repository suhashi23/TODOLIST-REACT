{"version":3,"sources":["component/todoreact/todo.js","App.js","index.js"],"names":["Todo","useState","inputdata","setInputData","lists","localStorage","getItem","JSON","parse","getLocalData","items","setItems","isEditItem","setIsEditItem","toggleButton","setToggleButton","addItems","map","curElem","id","name","myNewInputData","Date","getTime","toString","alert","useEffect","setItem","stringify","className","src","alt","type","placeholder","value","onChange","event","target","onClick","index","item_todo_edited","find","editItem","updatedItem","filter","deleteItem","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAiIeA,EAjHF,WACT,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAdT,WACjB,IAAMG,EAAQC,aAAaC,QAAQ,cAEnC,OAAGF,EACQG,KAAKC,MAAMJ,GAGX,GAOwBK,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAoCV,mBAAS,IAA7C,mBAAOW,EAAP,KAAmBC,EAAnB,KACA,EAAwCZ,oBAAS,GAAjD,mBAAOa,EAAP,KAAqBC,EAArB,KAGMC,EAAW,WACb,GAAKd,EAEE,GAAGA,GAAaY,EACnBH,EACID,EAAMO,KAAI,SAACC,GACP,OAAGA,EAAQC,KAAOP,EACd,2BAAWM,GAAX,IAAoBE,KAAMlB,IAEvBgB,MAGff,EAAa,IACbU,EAAc,MACdE,GAAgB,OACZ,CACJ,IAAMM,EAAiB,CACnBF,IAAI,IAAIG,MAAOC,UAAUC,WACzBJ,KAAMlB,GAEZS,EAAS,GAAD,mBAAKD,GAAL,CAAYW,KACpBlB,EAAa,SAnBXsB,MAAM,yBAmDd,OAHIC,qBAAU,WACNrB,aAAasB,QAAQ,aAAcpB,KAAKqB,UAAUlB,MACnD,CAACA,IAEJ,mCACI,qBAAKmB,UAAU,WAAf,SACI,sBAAKA,UAAU,YAAf,UACI,mCACI,qBAAKC,IAAI,oBAAoBC,IAAI,aACjC,+DAEJ,sBAAKF,UAAU,WAAf,UACI,uBAAOG,KAAK,OACRC,YAAY,qBACZJ,UAAU,eACVK,MAAOhC,EACPiC,SAAU,SAACC,GAAD,OAAWjC,EAAaiC,EAAMC,OAAOH,UAElDpB,EACC,mBAAGe,UAAU,sBAAsBS,QAAStB,IAE5C,mBAAGa,UAAU,qBAAqBS,QAAStB,OAIjD,sBAAKa,UAAU,YAAf,UACKnB,EAAMO,KAAI,SAACC,GACR,OACI,sBAAKW,UAAU,WAAf,UACI,6BAAKX,EAAQE,OACb,sBAAKS,UAAU,WAAf,UACI,mBAAGA,UAAU,cACbS,QAAS,kBAxD5B,SAACC,GACd,IAAMC,EAAmB9B,EAAM+B,MAAK,SAACvB,GACjC,OAAOA,EAAQC,KAAOoB,KAE1BpC,EAAaqC,EAAiBpB,MAC9BP,EAAc0B,GACdxB,GAAgB,GAkD+B2B,CAASxB,EAAQC,OAChC,mBAAGU,UAAU,mBACbS,QAAS,kBAhDtB,SAACC,GAChB,IAAMI,EAAcjC,EAAMkC,QAAO,SAAC1B,GAC9B,OAAOA,EAAQC,IAAMoB,KAEzB5B,EAASgC,GA4CkCE,CAAW3B,EAAQC,YANXD,EAAQC,OAHnD,OAkBA,qBAAKU,UAAU,YAAf,SACI,wBAAQA,UAAU,eAClB,oBAAkB,aAClBS,QApDE,WACd3B,EAAS,IACTR,EAAa,KAgDD,SAGI,4DC7Gb2C,EARH,WACR,OACI,mCACI,cAAC,EAAD,OCHZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.4f2a6ed2.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport \"./style.css\";\r\n\r\n//get localstorage data back\r\nconst getLocalData = () =>{\r\n    const lists = localStorage.getItem(\"mytodolist\");\r\n\r\n    if(lists) {\r\n        return JSON.parse(lists);\r\n    }\r\n    else{\r\n        return [];\r\n    }\r\n}\r\n\r\n\r\nconst Todo = () => {\r\n    const [inputdata, setInputData] = useState(\"\");\r\n    const [items, setItems] = useState(getLocalData());\r\n    const [isEditItem, setIsEditItem] = useState(\"\");\r\n    const [toggleButton, setToggleButton] = useState(false);\r\n\r\n    //add item function\r\n    const addItems = () => {\r\n        if (!inputdata) {\r\n            alert(\"Please fill the data\");\r\n        } else if(inputdata && toggleButton){\r\n            setItems(\r\n                items.map((curElem) => {\r\n                    if(curElem.id === isEditItem){\r\n                        return{ ...curElem, name: inputdata};\r\n                    }\r\n                    return curElem;\r\n                })\r\n            );\r\n            setInputData(\"\");\r\n            setIsEditItem(null);\r\n            setToggleButton(false);\r\n          } else{\r\n            const myNewInputData = {\r\n                id: new Date().getTime().toString(),\r\n                name: inputdata,\r\n            };\r\n          setItems([...items, myNewInputData]);\r\n          setInputData(\"\");\r\n        };\r\n    };\r\n\r\n    //edit the items\r\n    const editItem = (index) => {\r\n        const item_todo_edited = items.find((curElem) => {\r\n            return curElem.id === index;\r\n        });\r\n        setInputData(item_todo_edited.name);\r\n        setIsEditItem(index);\r\n        setToggleButton(true);\r\n    };\r\n\r\n    // how to delete items\r\n        const deleteItem = (index) => {\r\n            const updatedItem = items.filter((curElem) => {\r\n                return curElem.id != index;\r\n            });\r\n            setItems(updatedItem);\r\n        };\r\n\r\n    // remove all the elements\r\n        const removeAll = () => {\r\n            setItems([]);\r\n            setInputData(\"\");\r\n        };\r\n\r\n    //adding localstorage\r\n        useEffect(() => {\r\n            localStorage.setItem(\"mytodolist\", JSON.stringify(items));\r\n        }, [items]);\r\n    return (\r\n        <>\r\n            <div className=\"main-div\">\r\n                <div className=\"child-div\">\r\n                    <figure>\r\n                        <img src=\"./images/todo.png\" alt=\"todologo\" />\r\n                        <figcaption>Add Your List Here</figcaption>\r\n                    </figure>\r\n                    <div className=\"addItems\">\r\n                        <input type=\"text\"\r\n                            placeholder=\"✍    Add Item\"\r\n                            className=\"form-control\"\r\n                            value={inputdata}\r\n                            onChange={(event) => setInputData(event.target.value)} \r\n                        />\r\n                        {toggleButton ? (\r\n                          <i className=\"fas fa-edit add-btn\" onClick={addItems}></i>\r\n                        ) : (\r\n                          <i className=\"fa fa-plus add-btn\" onClick={addItems}></i>\r\n                        )}\r\n                    </div>\r\n                    {/* show our items */}\r\n                    <div className=\"showItems\">\r\n                        {items.map((curElem) => {\r\n                            return (\r\n                                <div className=\"eachItem\" key={curElem.id}>\r\n                                    <h3>{curElem.name}</h3>\r\n                                    <div className=\"todo-btn\">\r\n                                        <i className=\"far fa-edit\"\r\n                                        onClick={() => editItem(curElem.id)} ></i>\r\n                                        <i className=\"fas fa-trash-alt\" \r\n                                        onClick={() => deleteItem(curElem.id)} ></i>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })};\r\n\r\n                    </div>\r\n\r\n                    {/* remove all button */}\r\n                    <div className=\"showItems\">\r\n                        <button className=\"btn effect04\" \r\n                        data-sm-link-text=\"Remove All\"\r\n                        onClick={removeAll} >\r\n                            <span> CHECK LIST </span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import React from 'react';\nimport Todo from './component/todoreact/todo'\n\nconst App = () => {\n    return (\n        <>\n            <Todo/>\n        </>\n    )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}